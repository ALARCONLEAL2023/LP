<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="Tenaris.Library.Proxy" type="Tenaris.Library.Proxy.Configuration.ProxyFactoryConfigurationSection, Tenaris.Library.Proxy, Version=4.1.0.0, Culture=neutral, PublicKeyToken=c4a5016cfc42fcd0"/>
    <section name="ManagerBaseConfiguration" type="Tenaris.Manager.Forum.Shared.Configuration.ManagerBaseConfiguration, Tenaris.Manager.Forum.Shared, Version=4.1.0.0, Culture=neutral, PublicKeyToken=8a748c80852b8187"/>
    <section name="Tenaris.Manager.Interruption.InterruptionManager" type="Tenaris.Library.Framework.Factory.FactoryConfiguration, Tenaris.Library.Framework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=d69ca37b4d4b73b8"/>
    <section name="log" type="Tenaris.Library.Log.LogConfiguration, Tenaris.Library.Log, Version=4.1.0.0, Culture=neutral, PublicKeyToken=bbb03b5ff4bbb68b"/>
    <section name="Tenaris.Manager.Production.ProductionManager" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy, Version=4.1.0.0, Culture=neutral, PublicKeyToken=c4a5016cfc42fcd0"/>
    <section name="KeyManager" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy, Version=4.1.0.0, Culture=neutral, PublicKeyToken=c4a5016cfc42fcd0"/>
    <section name="Tenaris.Manager.Shift" type="Tenaris.Library.Proxy.Factories.GenericProxyFactoryConfigurationSection, Tenaris.Library.Proxy"/>
    <section name="AcquisitionConfiguration" type="Tenaris.Library.Framework.Factory.FactoryConfiguration, Tenaris.Library.Framework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=d69ca37b4d4b73b8"/>
    <section name="Tenaris.Manager.Handshake.HandshakeManager" type="Tenaris.Library.Framework.Factory.FactoryConfiguration, Tenaris.Library.Framework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=d69ca37b4d4b73b8"/>
    <section name="SpecificationServiceClient" type="Tenaris.Library.Framework.Factory.FactoryConfiguration, Tenaris.Library.Framework, Version=4.1.0.0, Culture=neutral, PublicKeyToken=d69ca37b4d4b73b8"/>

	<section name="Plugin.Interruption.CND"  type="Tenaris.Tamsa.Library.Plugin.Interruption.Configuration.PluginConfiguration, Tenaris.Tamsa.Library.Plugin.Interruption"/>
  </configSections>

  <connectionStrings>
    <add name="dbLevel2" connectionString="Data Source=TNATFT2PRDLSN.tnsautoca.techint.net,5040;Initial Catalog=L1Am21;Persist Security Info=True;Integrated Security=SSPI;MultipleActiveResultSets=True;Application Name=DownTimeManager;DefaultCommandTimeout=30"
      providerName="System.Data.SqlClient" />
  </connectionStrings>

  <!-- Common configuration section -->
  <ManagerBaseConfiguration areaCode="Line1_NDT" defaultConnectionStringName="dbLevel2"/>

  <Tenaris.Manager.Interruption.InterruptionManager factoryType="Tenaris.Manager.Interruption.InterruptionManagerFactory, Tenaris.Manager.Interruption" isSingleton="True">
    <InterruptionManagerConfiguration keyManagerSectionName="KeyManager">
      <ActivePlugins>
        <Plugin machineCode="CND" sectionName="Plugin.Interruption.CND"  type="Tenaris.Tamsa.Library.Plugin.Interruption.Plugin, Tenaris.Tamsa.Library.Plugin.Interruption" />
	  </ActivePlugins>
    </InterruptionManagerConfiguration>
  </Tenaris.Manager.Interruption.InterruptionManager>


  <Plugin.Interruption.CND   dbConnection="dbLevel2"  categoryCode="INTERRUPTION"  categoryMicro="DELAY" productionManagerFactory="Tenaris.Manager.Production.ProductionManager"/>

  <log
	  maxFileSize="100000"
	  maxFileCount="40"
	  msgFormat="{Timestamp:HH:mm.ss.fff} ; {Level,-7} ; {ThreadId,-5:d5} ; {Message} ; {MethodName}"
    logLevel="Debug"
	noQueue="true"
    traceAttributeLogEnabled="false"
	path="..\..\..\Logs\Manager\Interruption\"
    logBaseName="Tenaris.Manager.Interruption"
    additionalLogDestination="Console"
    logAssemblyLoad="false"
  />

  <Tenaris.Library.Proxy factoryType="Tenaris.Library.Proxy.Factories.PipeProxyFactory, Tenaris.Library.Proxy">
    <Configuration>
      <Components>
        <Component type="Tenaris.Library.Proxy.Components.ConnectionMonitorComponent, Tenaris.Library.Proxy" >
          <Interval>1000</Interval>
        </Component>
      </Components>
      <EventListener type="Tenaris.Library.Proxy.EventListener, Tenaris.Library.Proxy "/>
      <Dispatcher type="Tenaris.Library.Proxy.Dispatchers.DirectMessageDispatcher, Tenaris.Library.Proxy"/>
    </Configuration>
  </Tenaris.Library.Proxy>

  <system.runtime.remoting>
    <application name="InterruptionManager">
      <channels>
        <channel ref="tcp" port="50013" >
          <serverProviders>
            <formatter ref="binary" typeFilterLevel="Full"/>
          </serverProviders>
          <clientProviders>
            <provider type="Tenaris.Library.Proxy.Remoting.ClientRemotingInterceptorProvider, Tenaris.Library.Proxy, Version=4.1.0.0, Culture=neutral, PublicKeyToken=c4a5016cfc42fcd0"/>
            <formatter ref="binary" typeFilterLevel="Full"/>
          </clientProviders>
        </channel>
      </channels>
      <service>
      </service>
    </application>
  </system.runtime.remoting>

  <KeyManager
  instanceType="Tenaris.Library.IKeyManager.Shared.IKeyManager, Tenaris.Library.IKeyManager.Shared"
  aliveInterval="5000"
  singleInstance="true"
  validateConnection="false">
    <Redundancy>
      <Address url="tcp://TNACAWFM191.tnsautoca.techint.net:50009/Tenaris.Manager.Production.ProductionManager.soap" forumPresent="false" isTargetManager="true"/>
    </Redundancy>
  </KeyManager>

  <!--Production manager configuration -->
  <Tenaris.Manager.Production.ProductionManager
    instanceType="Tenaris.Manager.Production.Shared.IProductionManager, Tenaris.Manager.Production.Shared"
    aliveInterval="5000"
    singleInstance="true"
    validateConnection="false">
    <Redundancy>
      <Address url="tcp://TNACAWFM191.tnsautoca.techint.net:50009/Tenaris.Manager.Production.ProductionManager.soap" forumPresent="false" isTargetManager="true"/>
    </Redundancy>
  </Tenaris.Manager.Production.ProductionManager>

  <!-- Configuration used by factory to create the manager -->
  <Tenaris.Manager.Handshake.HandshakeManager factoryType="Tenaris.Manager.Handshake.HandshakeFactory, Tenaris.Manager.Handshake" isSingleton="True">
    <HandshakeManagerConfiguration
        HandshakeReturnsResultAndTriggerCopy="true"
        Testing="false"
        HandledApplicationCodeList="InterruptionManager">
    </HandshakeManagerConfiguration>
    <!-- HandshakeReturnsResultAndTriggerCopy - Flag indicating whether handshake manager will work responding the Command indicated by client and a copy of the Counter
         so that PLC can validate that the answer recibed from Level2 matches the request it is waiting for. If configured as False,
         handshake manager operates as defined for first version, that is, responding only the Command (Result) indicated by the client. -->
    <!-- Testing - Flag indicating whether handshake manager is being tested -->
    <!-- HandledDefinitionList - Comma separated list with all handshake definition codes that 
         this instance of handshake manager is going to handle. If empty, the default is to handle ALL handshakes of configured area -->
  </Tenaris.Manager.Handshake.HandshakeManager>

  <AcquisitionConfiguration factoryType="Tenaris.Library.IVisionClient.IVisionClientFactory, Tenaris.Library.IVisionClient, Version=4.1.0.0, Culture=neutral, PublicKeyToken=76aaee927e074b49">
    <IVisionClientConfiguration
     ConnectionStringName=""
     IVisionMode="IVisionRT"
     AliveCheckInterval="5000"
     SOAPReadInterval="2000"
     RetryCount="2"
     Timeout="5000" >
      <Servers>
        <Server ServerName="autmsystest1" />
      </Servers>
    </IVisionClientConfiguration>
  </AcquisitionConfiguration>

   <SpecificationServiceClient factoryType="Tenaris.Tamsa.Service.SpecificationService.Client.SpecificationServiceClientFactory, Tenaris.Tamsa.Service.SpecificationService.Client, Version=4.1.0.0, Culture=neutral, PublicKeyToken=4808d6f4d2ff09b3" isSingleton="True">
    <SpecificationServiceClientConfiguration Address="net.tcp://10.92.70.160:50008/ServiceSpecification/Specification"/>
  </SpecificationServiceClient>  

  <!-- Shift manager configuration -->
  <Tenaris.Manager.Shift
    instanceType="Tenaris.Manager.Shift.Shared.IShiftManager, Tenaris.Manager.Shift.Shared"
    aliveInterval="5000"
    singleInstance="true"
    validateConnection="false">
    <Redundancy>
      <Address url="tcp://TNACAWFM191.tnsautoca.techint.net:50003/Tenaris.Manager.Shift.ShiftManager.soap" forumPresent="false" isTargetManager="true"/>
    </Redundancy>
  </Tenaris.Manager.Shift>


  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
  </startup>

</configuration>